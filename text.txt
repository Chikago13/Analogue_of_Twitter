Техническое задание аналог Twitter

Пользователь может иметь одну из 3 ролей:
    • Администратор
    • Модератор
    • Пользователь
Администратор имеет право просматривать любые страницы, блокировать их на любой период времени и навсегда, удалять любые публикации и блокировать пользователей. Администратор также имеет доступ к панели администратора.
Модератор имеет право просматривать любые страницы, блокировать их на любой период времени, удалять любые посты.

Пользователь может:
Регистрация. Вход.
Создать страницу, отредактировать ее заголовок, uuid и описание, добавить и удалить теги, сделать ее частной/публичной
подписаться на чужие страницы (бросить заявку на подписку в случае приватных страниц)
просмотреть список желающих подписаться на страницу (в случае закрытой) и подтвердить/отказаться от подписки.
писать посты на своих страницах, редактировать их, удалять
лайкать/не нравится постам, отвечать на них от имени любой из своих страниц
Просмотреть понравившиеся посты

Возможности системы
Отправляйте подписчикам уведомления по электронной почте о новых публикациях.
Показать ленту новостей (все новые публикации подписанных и собственных страниц)
Автоматически блокировать все страницы пользователя, если пользователь заблокирован
Обеспечить поиск страниц по заголовку/uuid/тегу и пользователей по имени пользователя/email. На одном endpoint 
Показывать статистику страницы (количество постов, подписчиков, лайков и т. д.), которая генерируется только владельцем страниц.

Технологии 
Базы данных: PostgreSQL.
Авторизация: PyJWT
Планировщик: Celery
Брокер: RabbitMQ
Бэкенд: Django, Django Rest Framework.
DevOps: Docker, Docker-compose